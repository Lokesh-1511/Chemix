{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chemix\\\\src\\\\components\\\\ConditionsPanel.jsx\";\nimport React from 'react';\nimport '../styles/ConditionsPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionsPanel = ({\n  conditions,\n  onConditionChange,\n  conditionOptions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conditions-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"conditions-title\",\n      children: \"Reaction Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"condition-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"condition-label\",\n        children: \"\\uD83C\\uDF21\\uFE0F Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"condition-select\",\n        value: conditions.temperature,\n        onChange: e => onConditionChange('temperature', e.target.value),\n        children: conditionOptions.temperature.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"condition-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"condition-label\",\n        children: \"\\uD83D\\uDDDC\\uFE0F Pressure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"condition-select\",\n        value: conditions.pressure,\n        onChange: e => onConditionChange('pressure', e.target.value),\n        children: conditionOptions.pressure.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"condition-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"condition-label\",\n        children: \"\\u2697\\uFE0F Catalyst\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"condition-select\",\n        value: conditions.catalyst,\n        onChange: e => onConditionChange('catalyst', e.target.value),\n        children: conditionOptions.catalyst.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conditions-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Conditions affect reaction success rate and products formed. Experiment with different combinations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ConditionsPanel;\nexport default ConditionsPanel;\nvar _c;\n$RefreshReg$(_c, \"ConditionsPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConditionsPanel","conditions","onConditionChange","conditionOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","temperature","onChange","e","target","map","option","label","pressure","catalyst","_c","$RefreshReg$"],"sources":["D:/Chemix/src/components/ConditionsPanel.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../styles/ConditionsPanel.css';\r\n\r\nconst ConditionsPanel = ({ conditions, onConditionChange, conditionOptions }) => {\r\n  return (\r\n    <div className=\"conditions-panel\">\r\n      <h3 className=\"conditions-title\">Reaction Conditions</h3>\r\n      \r\n      <div className=\"condition-group\">\r\n        <label className=\"condition-label\">\r\n          üå°Ô∏è Temperature\r\n        </label>\r\n        <select \r\n          className=\"condition-select\"\r\n          value={conditions.temperature}\r\n          onChange={(e) => onConditionChange('temperature', e.target.value)}\r\n        >\r\n          {conditionOptions.temperature.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"condition-group\">\r\n        <label className=\"condition-label\">\r\n          üóúÔ∏è Pressure\r\n        </label>\r\n        <select \r\n          className=\"condition-select\"\r\n          value={conditions.pressure}\r\n          onChange={(e) => onConditionChange('pressure', e.target.value)}\r\n        >\r\n          {conditionOptions.pressure.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"condition-group\">\r\n        <label className=\"condition-label\">\r\n          ‚öóÔ∏è Catalyst\r\n        </label>\r\n        <select \r\n          className=\"condition-select\"\r\n          value={conditions.catalyst}\r\n          onChange={(e) => onConditionChange('catalyst', e.target.value)}\r\n        >\r\n          {conditionOptions.catalyst.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"conditions-info\">\r\n        <small>\r\n          Conditions affect reaction success rate and products formed. \r\n          Experiment with different combinations!\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionsPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}